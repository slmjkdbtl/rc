set noexpandtab
set shiftwidth=4
set tabstop=4
set smarttab
set autoindent
set mouse=a
set backspace=2
set timeoutlen=0
set ttimeoutlen=0
set scrolloff=3
set nowrapscan
set incsearch
set hlsearch
set signcolumn=yes
set laststatus=2
set showtabline=2
set noshowmode
set cursorline
set nofoldenable
set wrap
set wildignore=*/.git/*,*/.svn/*,*/.cache/*,*/.tmp/*,*/node_modules/*,*/.tup/*
set wildignore=.git,.svn,.cache,.tmp,.tup
set wildignore+=.DS_Store
set wildignore+=.tags,*.map
set wildignore+=*.so,*.o,*.out,*.swp,*.exe,*.elf,*.hex,*.dll,*~
set list
exec 'set listchars=tab:\|\ '

" don't load netrw
let loaded_netrwPlugin = 1

" color
syntax on
colorscheme super

" disable defaults
mapclear
imapclear
cmapclear
tmapclear

for k in split('qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890`-=];,./~!@#$%^&*()_+{}:"<>?)', '\zs')
	exec 'map ' . k . ' <nop>'
	exec 'map <m-' . k . '> <nop>'
	exec 'map <c-' . k . '> <nop>'
	exec 'imap <m-' . k . '> <nop>'
endfor

map <tab> <tab>
map <bs> <nop>
map [ <nop>
map \ <nop>
map ' <nop>
map <cr> <nop>

" save
nnoremap w :w<cr>

" undo / redo
nnoremap u u
nnoremap i <c-r>

" copy / paste
nnoremap o "*yy
vnoremap o ma"*y`a
noremap p P

" delete cur line
nnoremap d "_dd
vnoremap d "_d

" movement
noremap h h
noremap j j
noremap k k
noremap l l
noremap <m-h> b
noremap <m-l> e
noremap <m-j> 5j
noremap <m-k> 5k

" jump to proj
nnoremap z <nop>

" cut
nnoremap x "*dd
vnoremap x "*d

" select cur line
nnoremap v V

" prev / next search result
nnoremap [ N
nnoremap ] n

" ale
nnoremap <m-[> :ALEPrevious<cr>
nnoremap <m-]> :ALENext<cr>
nnoremap <m-b> :ALEDetail<cr>
nnoremap <m-i> :ALEHover<cr>
nnoremap <m-o> :ALEGoToDefinition<cr>
nnoremap <m-p> :ALEFindReferences<cr>

" move to line or selection start / end and enter insert mode
nnoremap > A
nnoremap < I
vnoremap > <esc>`>a
vnoremap < <esc>`<i

" go to document top / bot
noremap ^ gg
noremap $ G

" command mode
nnoremap : :

" search
nnoremap ? /

" prev / next buffer
nnoremap - :bprev<cr>
nnoremap = :bnext<cr>

" interact outside
nnoremap <m--> :call open#iterm()<cr>
nnoremap <m-=> :call open#finder()<cr>

" select cur word
nnoremap <space> viw

" del word in insert / command mode
inoremap <m-bs> <c-w>
cnoremap <m-bs> <c-w>

" enter insert mode
nnoremap <return> a

" delete cur selection and enter insert mode
vnoremap <return> s

" tab in insert mode tabs the whole line
nnoremap <silent> <tab> :call browser#toggle()<cr>
inoremap <tab> <C-o>I<tab>
" indent
vnoremap <tab> >
vnoremap <bs> <

" turn off search highlight
nnoremap / <esc>:noh<cr>

" signify
let g:signify_vcs_list = [ 'git' ]
let g:signify_sign_show_text = 1
let g:signify_sign_show_count = 0
let g:signify_sign_add = '+'
let g:signify_sign_delete = '-'
let g:signify_sign_delete_first_line = g:signify_sign_delete
let g:signify_sign_change = '~'
let g:signify_sign_changedelete = g:signify_sign_change

" ale
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_insert_leave = 0
let g:ale_sign_error = '>'
let g:ale_sign_warning = '*'
let g:ale_sign_info = '?'
let g:ale_set_highlights = 0
let g:ale_rust_cargo_check_examples = 1
let g:ale_rust_cargo_check_tests = 1

let g:ale_linters = {
	\ 'cs': [],
	\ 'c': [],
	\ 'cpp': [],
	\ 'typescript': ['tsserver'],
\ }

call ft#detect('*.h', 'c')
call ft#comment('c', '//%s')

call plug#load('ext/ale')
call plug#load('ext/vim-signify')
call trim#onsave()
call bufline#set()
call statline#set()
call comment#bind()
call pair#bind()
" call browser#bind()
