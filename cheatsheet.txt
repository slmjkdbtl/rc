ffmpeg basics

  $ ffmpeg -i input.mov output.mp4
  $ ffmpeg -i input.mov -c copy output.mp4
  $ ffmpeg -i input.mov -c:v copy -c:a copy output.mp4
  $ ffmpeg -i input.mov -c:v libx264 -c:a aac output.mp4

ffmpeg resize video

  $ ffmpeg -i input.mp4 -vf scale=640:480 -c:a copy output.mp4
  $ ffmpeg -i input.mp4 -vf scale=640:-1 -c:a copy output.mp4

ffmpeg crop video

  $ ffmpeg -i input.mp4 -vf crop=480:640:0:0 -c:a copy output.mp4

ffmpeg trim video

  $ ffmpeg -i input.mp4 -ss 00:00:00.000 -t 00:05:00.000 -c copy output.mp4

ffmpeg change video framerate

  $ ffmpeg -i input.mp4 -vf fps=30 output.mp4

ffmpeg change video speed

  $ ffmpeg -i input.mp4 -vf setpts=0.5*PTS -af atempo=2 output.mp4

ffmpeg reverse video

  $ ffmpeg -i input.mp4 -vf reverse -af areverse output.mp4

ffmpeg embed soft subtitle

  $ ffmpeg -i input.mp4 -i sub.srt -c copy -c:s mov_text -metadata:s:s:0 language=eng output.mp4
  $ ffmpeg -i input.mp4 -i eng.srt -i chi.srt -map 0 -map 1 -map 2 -c copy -c:s mov_text -metadata:s:s:0 language=eng -metadata:s:s:1 language=chi output.mp4
  $ ffmpeg -i input_eng.mp4 -i chi.srt -map 0 -map 1 -c copy -c:s mov_text -metadata:s:s:1 language=chi output_eng_chi.mp4

ffmpeg extract subtitle from video

  $ ffmpeg -i input.mp4 -map 0:s:0 sub.srt
  $ ffmpeg -i input.mp4 -map 0:s:1 sub2.srt

ffmpeg strip video / audio / subtitle from video

  $ ffmpeg -i input.mp4 -vn output.mp3
  $ ffmpeg -i input.mp4 -c:v copy -an output.mp4
  $ ffmpeg -i input.mp4 -c copy -sn output.mp4

ffmpeg resize image

  $ ffmpeg -i input.jpg -vf scale=640:480 output.jpg
  $ ffmpeg -i input.jpg -vf scale=640:480:flags=neighbor output.jpg

ffmpeg audio bitrate

  $ ffmpeg -i input.flac -b:a 256k output.mp3

ffmpeg add audio to video

  $ ffmpeg -i input.mp4 -i input.mp3 -c copy -map 0:v:0 -map 1:a:0 output.mp4

ffmpeg only keep audio and video

  $ ffmpeg -i input.mp4 -map 0:v -map 0:a -c copy output.mp4

ffmpeg remove all subtitle, data and attachments

  $ ffmpeg -i input.mp4 -map 0 -map -0:s -map -0:d -map -0:t -c copy output.mp4

ffmpeg remove the second audio track

  $ ffmpeg -i input.mp4 -map 0 -map -0:a:1 -c copy output.mp4

ffmpeg add audio to image generate video

  $ ffmpeg -loop 1 -i input.jpg -i input.mp3 -c:v libx264 -c:a aac -b:a 256k -preset veryslow -tune stillimage -vf scale=600:600 -shortest -strict experimental -shortest "$out"

ffmpeg set id3tag

  $ ffmpeg -i input.mp3
      \ -metadata title="The Will Come, Is Now"
      \ -metadata album="The Will Come, Is Now"
      \ -metadata artist="Ronnie Boykins"
      \ -metadata date="1975"
      \ -metadata track="1"
      \ -metadata disc=""
      \ -metadata TRACKTOTAL=""
      \ -metadata album_artist=""
      \ -metadata comment=""
      \ -metadata genre=""
      \ -metadata grouping=""
      \ -metadata composer=""
      \ -metadata producer=""
      \ -metadata copyright=""
      \ -metadata publisher=""
      \ -metadata encoder=""
      \ output.mp3

curl use header

  $ curl -H "Authorization: Bearer c35c1bea-eb03-2e10-ec33-acb230b6cb85" https://api.example.com

curl print header

  $ curl -i http://example.com

curl POST request with data

  $ curl -X POST -d '{"key1":"value1", "key2":"value2"}' -H "Content-Type: application/json" http://example.com
  $ curl -X POST -d "@data.json" http://example.com
  $ curl -X POST -d "param1=value1&param2=value2" http://example.com

curl follow redirect

  $ curl -L http://example.com

curl don't print progress and error

  $ curl -s http://example.com

curl send data as multipart/form-data

  $ curl -F "file=@$test.png" https://0x0.st)

flush dns cache

  $ sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder

set names

  $ sudo scutil --set HostName tga-macbook
  $ sudo scutil --set LocalHostName tga-macbook
  $ sudo scutil --set ComputerName tga-macbook

disable gatekeeper

  $ sudo spctl --master-disable

clean ds store

  $ find . -name '.DS_Store' -print -delete

get local ip

  $ ipconfig getifaddr en0

list files by size

  $ du -chs * .* | sort -h

notify

  $ osascript -e 'display notification "msg" with title "title"'

edit crontab

  $ crontab -e

generate ssh key

  $ ssh-keygen -t rsa

ssh auto login

  $ ssh-add

get character encoding

  $ file -I file.txt

convert character encoding

  $ iconv -f ISO-8859-1 -t UTF-8 src.txt > dest.txt

run TemplOS with qemu

  $ qemu-img create -f qcow2 temple 2G
  $ qemu-system-x86_64 \
      -m 512M \
      -drive file=temple \
      -cdrom TempleOS.ISO \
      -boot order=d
